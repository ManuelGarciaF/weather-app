{"version":3,"sources":["img/clear.jpg","img/clouds.jpg","img/mist.jpg","img/rain.jpg","img/snow.jpg","img/thunderstorm.jpg","components/ImageHeader.jsx","components/CityForm.jsx","components/UnitControl.jsx","components/ExtendedData.jsx","App.jsx","index.jsx"],"names":["module","exports","ImageHeader","props","unit","temp","weather","images","clear","clearImage","clouds","cloudsImage","mist","mistImage","rain","rainImage","snow","snowImage","thunderstorm","thunderstormImage","shownWeather","className","src","toLowerCase","alt","CityForm","handleCityChange","bind","handleSubmit","state","city","event","this","setState","target","value","preventDefault","firstElementChild","updateWeather","error","onSubmit","type","id","name","placeholder","onChange","React","Component","UnitControl","checked","uncheckedIcon","checkedIcon","onColor","offColor","ExtendedData","location","description","pressure","humidity","App","fetchWeatherData","handleUnitChange","currentCity","invalidLocation","then","data","sys","country","main","Math","floor","toString","catch","query","fetch","mode","response","json","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cad03e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear.4759b6a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.048cec85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mist.9fcc6259.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain.c94d0ecb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow.4266641e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.e77e9a8f.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ImageHeader.scss';\n\nimport clearImage from '../img/clear.jpg';\nimport cloudsImage from '../img/clouds.jpg';\nimport mistImage from '../img/mist.jpg';\nimport rainImage from '../img/rain.jpg';\nimport snowImage from '../img/snow.jpg';\nimport thunderstormImage from '../img/thunderstorm.jpg';\n\nconst ImageHeader = (props) => {\n  const { unit, temp, weather } = props;\n  const images = {\n    clear: clearImage,\n    clouds: cloudsImage,\n    mist: mistImage,\n    rain: rainImage,\n    snow: snowImage,\n    thunderstorm: thunderstormImage,\n  };\n\n  // Show clouds image in case of invalid data.\n  const shownWeather = weather === '-' ? 'clouds' : weather;\n\n  return (\n    <div className=\"image-header\">\n      <img src={images[shownWeather.toLowerCase()]} alt=\"Current Weather\" />\n      <div className=\"content\">\n        <div className=\"temperature\">\n          <span className=\"number\">\n            {temp}\n            °\n          </span>\n          <span className=\"unit\">{unit === 'metric' ? 'C' : 'F'}</span>\n        </div>\n        <div className=\"weather\">{weather}</div>\n      </div>\n    </div>\n  );\n};\n\nImageHeader.propTypes = {\n  unit: PropTypes.string.isRequired,\n  temp: PropTypes.string.isRequired,\n  weather: PropTypes.string.isRequired,\n};\n\nexport default ImageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CityForm.scss';\n\nclass CityForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCityChange = this.handleCityChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      city: '',\n    };\n  }\n\n  handleCityChange(event) {\n    this.setState({\n      city: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (!event.target.firstElementChild.value) return;\n\n    const { updateWeather } = this.props;\n    const { city } = this.state;\n    updateWeather(city);\n  }\n\n  render() {\n    const { city } = this.state;\n    const { error } = this.props;\n\n    return (\n      <div className=\"city-form\">\n        {error ? (\n          <small className=\"error\">\n            <i className=\"fas fa-exclamation-circle\" />\n            Invalid location!\n          </small>\n        ) : (\n          ''\n        )}\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"city\"\n            name=\"city\"\n            placeholder=\"CHANGE LOCATION\"\n            value={city}\n            onChange={this.handleCityChange}\n          />\n          <button type=\"submit\">\n            <i className=\"fas fa-check fa-lg\" />\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nCityForm.propTypes = {\n  updateWeather: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n\nexport default CityForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Switch from 'react-switch';\n\nimport './UnitControl.scss';\n\nconst UnitControl = (props) => {\n  const { onChange, checked } = props;\n  return (\n    // Disabled because control is inside custom component.\n    // eslint-disable-next-line jsx-a11y/label-has-associated-control\n    <label className=\"unit-control\">\n      <Switch\n        checked={checked}\n        onChange={onChange}\n        uncheckedIcon={<div className=\"toggle-symbol\">℃</div>}\n        checkedIcon={<div className=\"toggle-symbol\">℉</div>}\n        onColor=\"#364054\"\n        offColor=\"#364054\"\n      />\n    </label>\n  );\n};\n\nUnitControl.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default UnitControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ExtendedData.scss';\n\nconst ExtendedData = (props) => {\n  const {\n    location, description, pressure, humidity,\n  } = props;\n\n  return (\n    <div className=\"extended-data\">\n      <div className=\"location\">\n        <i className=\"fas fa-map-marker-alt\" />\n        <span>{location}</span>\n      </div>\n      <div className=\"weather-description\">{description}</div>\n      <div className=\"pressure\">\n        <div className=\"label\">PRESSURE</div>\n        <div className=\"value\">\n          {pressure}\n          hPa\n        </div>\n      </div>\n      <div className=\"humidity\">\n        <div className=\"label\">HUMIDITY</div>\n        <div className=\"value\">\n          {humidity}\n          %\n        </div>\n      </div>\n    </div>\n  );\n};\n\nExtendedData.propTypes = {\n  location: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  pressure: PropTypes.string.isRequired,\n  humidity: PropTypes.string.isRequired,\n};\n\nexport default ExtendedData;\n","import React from 'react';\n\nimport Header from './components/ImageHeader';\nimport CityForm from './components/CityForm';\nimport UnitControl from './components/UnitControl';\nimport ExtendedData from './components/ExtendedData';\n\nimport './App.scss';\n\nconst API_KEY = '09c4d436f979cacc5cd4e3dd944cefb2';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n    this.updateWeather = this.updateWeather.bind(this);\n    this.handleUnitChange = this.handleUnitChange.bind(this);\n\n    this.state = {\n      unit: 'metric',\n      currentCity: 'New York, US',\n      weather: '',\n      description: '',\n      temp: '',\n      pressure: '',\n      humidity: '',\n      invalidLocation: false,\n    };\n\n    this.updateWeather('New York, US');\n  }\n\n  // componentDidUpdate() {\n  //   console.table(this.state);\n  // }\n\n  updateWeather(city) {\n    this.fetchWeatherData(city)\n      .then((data) => {\n        this.setState({\n          currentCity: `${data.name}, ${data.sys.country}`,\n          weather: data.weather[0].main,\n          description: data.weather[0].description,\n          temp: Math.floor(data.main.temp).toString(),\n          pressure: data.main.pressure.toString(),\n          humidity: data.main.humidity.toString(),\n          invalidLocation: false,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          currentCity: '-',\n          weather: '-',\n          description: '-',\n          temp: '-',\n          pressure: '-',\n          humidity: '-',\n          invalidLocation: true,\n        });\n      });\n  }\n\n  async fetchWeatherData(query) {\n    const { unit } = this.state;\n    const response = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${API_KEY}&units=${unit}`,\n      { mode: 'cors' },\n    );\n    return response.json();\n  }\n\n  handleUnitChange(checked) {\n    this.setState(\n      {\n        unit: checked ? 'imperial' : 'metric',\n      },\n      () => {\n        const { currentCity } = this.state;\n        this.updateWeather(currentCity);\n      },\n    );\n  }\n\n  render() {\n    const {\n      unit,\n      currentCity,\n      weather,\n      description,\n      temp,\n      pressure,\n      humidity,\n      invalidLocation,\n    } = this.state;\n\n    return (\n      <main>\n        <div className=\"App\">\n          <Header unit={unit} temp={temp} weather={weather} />\n          <ExtendedData\n            location={currentCity}\n            pressure={pressure}\n            humidity={humidity}\n            description={description}\n          />\n          <UnitControl checked={unit === 'imperial'} onChange={this.handleUnitChange} />\n          <CityForm updateWeather={this.updateWeather} error={invalidLocation} />\n          <small className=\"about\">By Manuel Garcia. Data by openweathermap.org</small>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}